name: Publish Transformations to Rudder workspace

on:
  push:
    branches:
      - main
      - staging

jobs:
  request:
    runs-on: ubuntu-latest
    env:
      TEST_ONLY: ${{ github.event_name != 'push' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.15.0'

      - name: Cache Node Modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Install Dependencies
        run: npm ci

      - name: Check Installed Packages
        run: npm list

      # Enable debugging based on DEBUG_MODE
      - name: Debug Info
        if: env.DEBUG_MODE == 'true'
        run: |
          echo "Running in debug mode"
          npm list
          ls -la ./code

      # Deploy to RudderStack for Staging
      - name: Rudder Transformation Deploy to Staging
        if: github.ref == 'refs/heads/staging'
        uses: rudderlabs/rudder-transformation-action@1.1.0
        with:
          metaPath: './code/meta-staging.json'
          email: 'david.tenenbaum@rudderstack.com'
          accessToken: '2nnd9H264ouqphBWuKppmzPTWBN'
          uploadTestArtifact: true

      # Deploy to RudderStack for Production
      - name: Rudder Transformation Deploy to Production
        if: github.ref == 'refs/heads/main'
        uses: rudderlabs/rudder-transformation-action@1.1.0
        with:
          metaPath: './code/meta.json'
          email: 'david.tenenbaum@rudderstack.com'
          accessToken: '2nnd9H264ouqphBWuKppmzPTWBN'
          uploadTestArtifact: true

      - name: Collect Debug Information
        if: failure()
        run: |
          echo "Collecting debug information..."
          npm list
